// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes the interview performance based on the transcript.
 *
 * - summarizeInterview - A function that summarizes the interview transcript and provides feedback.
 * - SummarizeInterviewInput - The input type for the summarizeInterview function.
 * - SummarizeInterviewOutput - The return type for the summarizeInterview function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeInterviewInputSchema = z.object({
  transcript: z
    .string()
    .describe('The complete transcript of the interview, including questions and answers.'),
});
export type SummarizeInterviewInput = z.infer<typeof SummarizeInterviewInputSchema>;

const SummarizeInterviewOutputSchema = z.object({
  summary: z.string().describe('A summary of the interview performance.'),
  areasForImprovement: z
    .string()
    .describe('Key areas for improvement based on the interview performance.'),
});
export type SummarizeInterviewOutput = z.infer<typeof SummarizeInterviewOutputSchema>;

export async function summarizeInterview(input: SummarizeInterviewInput): Promise<SummarizeInterviewOutput> {
  return summarizeInterviewFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeInterviewPrompt',
  input: {schema: SummarizeInterviewInputSchema},
  output: {schema: SummarizeInterviewOutputSchema},
  prompt: `You are an interview coach providing feedback to job seekers.

  Based on the interview transcript provided, summarize the candidate's performance and identify key areas for improvement.

  Transcript:
  {{transcript}}

  Provide the summary and areas for improvement in a concise manner.
  `,
});

const summarizeInterviewFlow = ai.defineFlow(
  {
    name: 'summarizeInterviewFlow',
    inputSchema: SummarizeInterviewInputSchema,
    outputSchema: SummarizeInterviewOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
